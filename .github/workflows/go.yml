# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Airdrop Monitor

on:
  schedule:
    # 每10分钟执行一次，时间范围：北京时间8:00-24:00 (UTC时间0:00-16:00)
    - cron: '*/10 0-16 * * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 允许手动触发

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许写入仓库内容
      actions: read    # 允许读取actions
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # 获取完整历史以便访问快照文件

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build
      run: |
        cd cmd
        go build -v -o ../alpha .

    - name: Run Airdrop Monitor
      run: |
        cd cmd
        go run main.go

    - name: Commit and push snapshot if changed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 检查文件是否存在并添加
        if [ -f "data/last_snapshot.txt" ]; then
          git add data/last_snapshot.txt
          echo "Added data/last_snapshot.txt to staging"
        else
          echo "data/last_snapshot.txt not found, skipping"
          exit 0
        fi
        
        # 检查是否有变更需要提交
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "Committing changes..."
          git commit -m "Update airdrop snapshot [skip ci]"
          
          # 推送变更
          echo "Pushing changes..."
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:main
          echo "Successfully pushed changes"
        fi
